/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/reels/[id]/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Farbaaz-chouhan%2FDesktop%2Fcompany-work%2Fansweb%2Fsrc%2Fapp%2Freels%2F%5Bid%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Farbaaz-chouhan%2FDesktop%2Fcompany-work%2Fansweb%2Fsrc%2Fapp%2Freels%2F%5Bid%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./src/app/reels/[id]/page.tsx */ \"(app-pages-browser)/./src/app/reels/[id]/page.tsx\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGaG9tZSUyRmFyYmFhei1jaG91aGFuJTJGRGVza3RvcCUyRmNvbXBhbnktd29yayUyRmFuc3dlYiUyRnNyYyUyRmFwcCUyRnJlZWxzJTJGJTVCaWQlNUQlMkZwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLDBMQUFpSCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL2hvbWUvYXJiYWF6LWNob3VoYW4vRGVza3RvcC9jb21wYW55LXdvcmsvYW5zd2ViL3NyYy9hcHAvcmVlbHMvW2lkXS9wYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2Fhome%2Farbaaz-chouhan%2FDesktop%2Fcompany-work%2Fansweb%2Fsrc%2Fapp%2Freels%2F%5Bid%5D%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/reels/[id]/page.tsx":
/*!*************************************!*\
  !*** ./src/app/reels/[id]/page.tsx ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("// // \"use client\"\n// // import React, { useEffect, useRef, useState } from \"react\";\n// // import '@/app/globals.css'\n// // import { Bookmark, ChevronsLeft, ChevronsRight, Ellipsis, Heart, MessageCircle, Pause, Play, Share2, Volume2, VolumeOff } from 'lucide-react';\n// // import { useParams, useRouter } from \"next/navigation\";\n// // import Link from \"next/link\";\n// // type Post = {\n// //     id: number;\n// //     username: string;\n// //     profilePic: string;\n// //     videoUrl: string;\n// //     likes: number;\n// //     caption: string;\n// //     comments: Array<{ user: string; text: string }>;\n// // };\n// // export default function RealPage() {\n// //     const { id } = useParams();\n// //     const router = useRouter();\n// //     const [showFull, setShowFull] = useState<{ [Key: number]: boolean }>({});\n// //     const [saved, setSaved] = useState<{ [key: number]: boolean }>({});\n// //     const [likedPosts, setLikedPosts] = useState<{ [key: number]: boolean }>({});\n// //     const [posts, setPosts] = useState<Post[]>([]);\n// //     const videoRefs = useRef<(HTMLVideoElement | null)[]>([]);\n// //     const [videoStates, setVideoStates] = useState<{\n// //         [key: number]: {\n// //             isPlaying: boolean;\n// //             isMuted: boolean;\n// //             showIcon: 'play' | 'pause' | null;\n// //         }\n// //     }>({});\n// //     const currentIndex = posts.findIndex((p) => p.id === Number(id));\n// //     const currentPost = posts[currentIndex];\n// //     // Data fetching\n// //     useEffect(() => {\n// //         fetch(\"/mokedata/db.json\")\n// //             .then((res) => res.json())\n// //             .then((data) => setPosts(data))\n// //             .catch((err) => console.error(err));\n// //     }, []);\n// //     // useEffect(() => {\n// //     //     const handleScroll = () => {\n// //     //         const scrollY = window.scrollY;\n// //     //         const scrollHeight = document.body.scrollHeight - window.innerHeight;\n// //     //         if (scrollY >= scrollHeight - 10) {\n// //     //             const nextPost = posts[currentIndex + 1];\n// //     //             if (nextPost) {\n// //     //                 router.push(`/reels/${nextPost.id}`);\n// //     //             }\n// //     //         } else if (scrollY <= 0) {\n// //     //             const prevPost = posts[currentIndex - 1];\n// //     //             if (prevPost) {\n// //     //                 router.push(`/reels/${prevPost.id}`);\n// //     //             }\n// //     //         }\n// //     //     };\n// //     //     window.addEventListener(\"scroll\", handleScroll);\n// //     //     return () => window.removeEventListener(\"scroll\", handleScroll);\n// //     // }, [currentIndex, router]);\n// //     useEffect(() => {\n// //         const handleWheel = (e: WheelEvent) => {\n// //             if (e.deltaY > 0) {\n// //                 const nextPost = posts[currentIndex + 1];\n// //                 if (nextPost) router.replace(`/reels/${nextPost.id}`);\n// //             } else if (e.deltaY < 0) {\n// //                 const prevPost = posts[currentIndex - 1];\n// //                 if (prevPost) router.replace(`/reels/${prevPost.id}`);\n// //             }\n// //         };\n// //         window.addEventListener(\"wheel\", handleWheel, { passive: true });\n// //         return () => window.removeEventListener(\"wheel\", handleWheel);\n// //     }, [currentIndex, posts, router]);\n// //     // Improved Auto-play on scroll\n// //     useEffect(() => {\n// //         const observer = new IntersectionObserver(\n// //             (entries) => {\n// //                 entries.forEach((entry) => {\n// //                     const video = entry.target as HTMLVideoElement;\n// //                     const postId = parseInt(video.dataset.postId || '0');\n// //                     if (entry.isIntersecting && entry.intersectionRatio > 0.7) {\n// //                         // Video visible - play it\n// //                         video.play().catch(err => {\n// //                             console.log(\"Auto-play prevented:\", err);\n// //                         });\n// //                     } else {\n// //                         // Video not visible - pause it\n// //                         video.pause();\n// //                         video.currentTime = 0;\n// //                     }\n// //                 });\n// //             },\n// //             {\n// //                 threshold: [0.3, 0.7, 1.0],\n// //                 rootMargin: '0px 0px -10% 0px'\n// //             }\n// //         );\n// //         // Observe all videos\n// //         videoRefs.current.forEach((video) => {\n// //             if (video) observer.observe(video);\n// //         });\n// //         return () => {\n// //             videoRefs.current.forEach((video) => {\n// //                 if (video) observer.unobserve(video);\n// //             });\n// //         };\n// //     }, [posts]);\n// //     // Toggle Play/Pause \n// //     const togglePlayPause = (postId: number) => {\n// //         const video = videoRefs.current[postId];\n// //         if (video) {\n// //             if (video.paused) {\n// //                 video.play().catch(err => {\n// //                     console.log(\"Play failed:\", err);\n// //                 });\n// //                 setVideoStates(prev => ({\n// //                     ...prev,\n// //                     [postId]: { ...prev[postId], isPlaying: true, showIcon: 'play' }\n// //                 }));\n// //             } else {\n// //                 video.pause();\n// //                 setVideoStates(prev => ({\n// //                     ...prev,\n// //                     [postId]: { ...prev[postId], isPlaying: false, showIcon: 'pause' }\n// //                 }));\n// //             }\n// //             setTimeout(() => {\n// //                 setVideoStates(prev => ({\n// //                     ...prev,\n// //                     [postId]: { ...prev[postId], showIcon: null }\n// //                 }));\n// //             }, 500);\n// //         }\n// //     };\n// //     // Handle mute/unmute\n// //     const handleMuteClick = (postId: number, e: React.MouseEvent) => {\n// //         e.stopPropagation(); // Prevent triggering video click\n// //         const video = videoRefs.current[postId];\n// //         if (video) {\n// //             video.muted = !video.muted;\n// //             setVideoStates(prev => ({\n// //                 ...prev,\n// //                 [postId]: { ...prev[postId], isMuted: video.muted }\n// //             }));\n// //         }\n// //     };\n// //     const toggleLike = (id: number) => {\n// //         setLikedPosts((prev) => ({\n// //             ...prev,\n// //             [id]: !prev[id],\n// //         }));\n// //     };\n// //     const toggleSave = (id: number) => {\n// //         setSaved((prev) => ({\n// //             ...prev,\n// //             [id]: !prev[id],\n// //         }));\n// //     };\n// //     const toggleShow = (id: number) => {\n// //         setShowFull((prev) => ({\n// //             ...prev,\n// //             [id]: !prev[id],\n// //         }));\n// //     };\n// //     // Text\n// //     const truncateText = (text: string, maxWords: number = 6) => {\n// //         const words = text.split(\" \");\n// //         const shortText = words.slice(0, maxWords).join(\" \");\n// //         return {\n// //             shortText: shortText + (words.length > maxWords ? \"...\" : \"\"),\n// //             isTruncated: words.length > maxWords\n// //         };\n// //     };\n// //     if (!posts) {\n// //         return <div className=\"text-white flex justify-center items-center h-20\">Loading...</div>;\n// //     }\n// //     return (\n// //         <div className=\"w-full justify-items-center bg-black min-h-screen\">\n// //             {/*  Tabs (Fixed top) */}\n// //             <div className=\"fixed top-0 left-0 right-0 z-30 flex justify-center gap-6 bg-black/60 backdrop-blur-md py-3 border-b border-gray-700\">\n// //                 <Link href=\"/following\" className='text-lg font-semibold transition-all'>Following</Link>\n// //                 <Link href=\"/news\" className='text-lg font-semibold transition-all'>News</Link>\n// //                 <Link href=\"/explore\" className='text-lg font-semibold transition-all'>Explore</Link>\n// //             </div>\n// //             {/* Reels Section */}\n// //             <div className=\"w-full max-w-[450px]\">\n// //                 {currentPost && (() => {\n// //                     const { shortText, isTruncated } = truncateText(currentPost.caption);\n// //                     const videoState = videoStates[currentPost.id] || { isPlaying: false, isMuted: false, showIcon: null };\n// //                     return (\n// //                         <div key={currentPost.id} className=\"mb-8 border-b border-gray-800 pb-6\">\n// //                             <div className=\"relative mt-10\">\n// //                                 {/* Video */}\n// //                                 <video\n// //                                     ref={(el) => { videoRefs.current[currentPost.id] = el; }}\n// //                                     data-post-id={currentPost.id}\n// //                                     src={currentPost.videoUrl}\n// //                                     className=\"w-full h-[600px] object-cover bg-black z-0\"\n// //                                     muted={videoState.isMuted}\n// //                                     loop\n// //                                     playsInline\n// //                                     onClick={() => togglePlayPause(currentPost.id)}\n// //                                 />\n// //                                 {/* Play/Pause Overlay */}\n// //                                 {videoState.showIcon && (\n// //                                     <button className=\"absolute inset-0 flex items-center justify-center bg-black/30 transition-opacity duration-300\">\n// //                                         {videoState.showIcon === 'play' ? (\n// //                                             <Pause size={30} className=\"text-white/90\" />\n// //                                         ) : (\n// //                                             <Play size={30} className=\"text-white/90\" />\n// //                                         )}\n// //                                     </button>\n// //                                 )}\n// //                                 {/* User info */}\n// //                                 <div className=\"absolute flex items-center gap-3 bottom-20 left-3 z-20\">\n// //                                     <div className=\"w-8 h-8 rounded-full p-[2px] bg-gradient-to-tr from-pink-500 via-yellow-400 to-red-500\">\n// //                                         <img\n// //                                             src={currentPost.profilePic}\n// //                                             alt={currentPost.username}\n// //                                             className=\"w-full h-full rounded-full object-cover border border-black\"\n// //                                         />\n// //                                     </div>\n// //                                     <div className=\"username text-white font-semibold\">{currentPost.username}</div>\n// //                                 </div>\n// //                                 {/* Caption */}\n// //                                 <div className=\"absolute w-[375px] top-[520px] left-3 text-white text-sm z-20\">\n// //                                     {showFull[currentPost.id] ? currentPost.caption : shortText}\n// //                                     {isTruncated && (\n// //                                         <button\n// //                                             onClick={() => toggleShow(currentPost.id)}\n// //                                             className=\"text-gray-400 ml-1 hover:text-white\"\n// //                                         >\n// //                                             {showFull[currentPost.id] ? \" less\" : \" more\"}\n// //                                         </button>\n// //                                     )}\n// //                                 </div>\n// //                                 {/* Volume Button */}\n// //                                 <button\n// //                                     onClick={(e) => handleMuteClick(currentPost.id, e)}\n// //                                     className=\"absolute top-[520px] ml-[420px] -translate-x-1/2 text-white bg-black/60 rounded-full p-2 backdrop-blur-sm\"\n// //                                 >\n// //                                     {videoState.isMuted ? <VolumeOff size={16} /> : <Volume2 size={16} />}\n// //                                 </button>\n// //                                 {/* Actions */}\n// //                                 <div className=\"absolute flex flex-col items-center right-4 bottom-28 gap-6 z-20\">\n// //                                     <button onClick={() => toggleLike(currentPost.id)}>\n// //                                         <Heart\n// //                                             size={24}\n// //                                             className={`transition-all duration-300 ${likedPosts[currentPost.id]\n// //                                                 ? \"text-red-500 scale-110\"\n// //                                                 : \"text-white\"\n// //                                                 }`}\n// //                                             fill={likedPosts[currentPost.id] ? \"currentColor\" : \"none\"}\n// //                                         />\n// //                                     </button>\n// //                                     <button className=\"text-white transition-transform hover:scale-110\">\n// //                                         <MessageCircle size={24} />\n// //                                     </button>\n// //                                     <button onClick={() => toggleSave(currentPost.id)}>\n// //                                         <Bookmark\n// //                                             size={24}\n// //                                             className={`transition-all duration-300 ${saved[currentPost.id]\n// //                                                 ? \"fill-white text-white\"\n// //                                                 : \"fill-none text-white\"\n// //                                                 }`}\n// //                                         />\n// //                                     </button>\n// //                                 </div>\n// //                             </div>\n// //                         </div>\n// //                     );\n// //                 })()}\n// //             </div>\n// //         </div>\n// //     );\n// // }\n// \"use client\"\n// import React, { useEffect, useRef, useState } from \"react\";\n// import '@/app/globals.css'\n// import { Bookmark, ChevronsLeft, ChevronsRight, Ellipsis, Heart, MessageCircle, Pause, Play, Share2, Volume2, VolumeOff } from 'lucide-react';\n// import { useParams, useRouter } from \"next/navigation\";\n// import Link from \"next/link\";\n// type Post = {\n//     id: number;\n//     username: string;\n//     profilePic: string;\n//     videoUrl: string;\n//     likes: number;\n//     caption: string;\n//     comments: Array<{ user: string; text: string }>;\n// };\n// export default function RealPage() {\n//     const { id } = useParams();\n//     const router = useRouter();\n//     const [showFull, setShowFull] = useState<{ [Key: number]: boolean }>({});\n//     const [saved, setSaved] = useState<{ [key: number]: boolean }>({});\n//     const [likedPosts, setLikedPosts] = useState<{ [key: number]: boolean }>({});\n//     const [posts, setPosts] = useState<Post[]>([]);\n//     const videoRefs = useRef<(HTMLVideoElement | null)[]>([]);\n//     const [videoStates, setVideoStates] = useState<{\n//         [key: number]: {\n//             isPlaying: boolean;\n//             isMuted: boolean;\n//             showIcon: 'play' | 'pause' | null;\n//         }\n//     }>({});\n//     const currentIndex = posts.findIndex((p) => p.id === Number(id));\n//     const currentPost = posts[currentIndex];\n//     // Data fetching\n//     useEffect(() => {\n//         fetch(\"/mokedata/db.json\")\n//             .then((res) => res.json())\n//             .then((data) => setPosts(data))\n//             .catch((err) => console.error(err));\n//     }, []);\n//     // useEffect(() => {\n//     //     const handleScroll = () => {\n//     //         const scrollY = window.scrollY;\n//     //         const scrollHeight = document.body.scrollHeight - window.innerHeight;\n//     //         if (scrollY >= scrollHeight - 10) {\n//     //             const nextPost = posts[currentIndex + 1];\n//     //             if (nextPost) {\n//     //                 router.push(`/reels/${nextPost.id}`);\n//     //             }\n//     //         } else if (scrollY <= 0) {\n//     //             const prevPost = posts[currentIndex - 1];\n//     //             if (prevPost) {\n//     //                 router.push(`/reels/${prevPost.id}`);\n//     //             }\n//     //         }\n//     //     };\n//     //     window.addEventListener(\"scroll\", handleScroll);\n//     //     return () => window.removeEventListener(\"scroll\", handleScroll);\n//     // }, [currentIndex, router]);\n//     useEffect(() => {\n//         const handleWheel = (e: WheelEvent) => {\n//             if (e.deltaY > 0) {\n//                 const nextPost = posts[currentIndex + 1];\n//                 if (nextPost) router.replace(`/reels/${nextPost.id}`);\n//             } else if (e.deltaY < 0) {\n//                 const prevPost = posts[currentIndex - 1];\n//                 if (prevPost) router.replace(`/reels/${prevPost.id}`);\n//             }\n//         };\n//         window.addEventListener(\"wheel\", handleWheel, { passive: true });\n//         return () => window.removeEventListener(\"wheel\", handleWheel);\n//     }, [currentIndex, posts, router]);\n//     // Improved Auto-play on scroll\n//     useEffect(() => {\n//         const observer = new IntersectionObserver(\n//             (entries) => {\n//                 entries.forEach((entry) => {\n//                     const video = entry.target as HTMLVideoElement;\n//                     const postId = parseInt(video.dataset.postId || '0');\n//                     if (entry.isIntersecting && entry.intersectionRatio > 0.7) {\n//                         // Video visible - play it\n//                         video.play().catch(err => {\n//                             console.log(\"Auto-play prevented:\", err);\n//                         });\n//                     } else {\n//                         // Video not visible - pause it\n//                         video.pause();\n//                         video.currentTime = 0;\n//                     }\n//                 });\n//             },\n//             {\n//                 threshold: [0.3, 0.7, 1.0],\n//                 rootMargin: '0px 0px -10% 0px'\n//             }\n//         );\n//         // Observe all videos\n//         videoRefs.current.forEach((video) => {\n//             if (video) observer.observe(video);\n//         });\n//         return () => {\n//             videoRefs.current.forEach((video) => {\n//                 if (video) observer.unobserve(video);\n//             });\n//         };\n//     }, [posts]);\n//     // Toggle Play/Pause \n//     const togglePlayPause = (postId: number) => {\n//         const video = videoRefs.current[postId];\n//         if (video) {\n//             if (video.paused) {\n//                 video.play().catch(err => {\n//                     console.log(\"Play failed:\", err);\n//                 });\n//                 setVideoStates(prev => ({\n//                     ...prev,\n//                     [postId]: { ...prev[postId], isPlaying: true, showIcon: 'play' }\n//                 }));\n//             } else {\n//                 video.pause();\n//                 setVideoStates(prev => ({\n//                     ...prev,\n//                     [postId]: { ...prev[postId], isPlaying: false, showIcon: 'pause' }\n//                 }));\n//             }\n//             setTimeout(() => {\n//                 setVideoStates(prev => ({\n//                     ...prev,\n//                     [postId]: { ...prev[postId], showIcon: null }\n//                 }));\n//             }, 500);\n//         }\n//     };\n//     // Handle mute/unmute\n//     const handleMuteClick = (postId: number, e: React.MouseEvent) => {\n//         e.stopPropagation(); // Prevent triggering video click\n//         const video = videoRefs.current[postId];\n//         if (video) {\n//             video.muted = !video.muted;\n//             setVideoStates(prev => ({\n//                 ...prev,\n//                 [postId]: { ...prev[postId], isMuted: video.muted }\n//             }));\n//         }\n//     };\n//     const toggleLike = (id: number) => {\n//         setLikedPosts((prev) => ({\n//             ...prev,\n//             [id]: !prev[id],\n//         }));\n//     };\n//     const toggleSave = (id: number) => {\n//         setSaved((prev) => ({\n//             ...prev,\n//             [id]: !prev[id],\n//         }));\n//     };\n//     const toggleShow = (id: number) => {\n//         setShowFull((prev) => ({\n//             ...prev,\n//             [id]: !prev[id],\n//         }));\n//     };\n//     // Text\n//     const truncateText = (text: string, maxWords: number = 6) => {\n//         const words = text.split(\" \");\n//         const shortText = words.slice(0, maxWords).join(\" \");\n//         return {\n//             shortText: shortText + (words.length > maxWords ? \"...\" : \"\"),\n//             isTruncated: words.length > maxWords\n//         };\n//     };\n//     if (!posts) {\n//         return <div className=\"text-white flex justify-center items-center h-20\">Loading...</div>;\n//     }\n//     return (\n//         <div className=\"w-full bg-black text-white flex justify-center items-start\">\n//             {currentPost && (\n//                 <div className=\"flex w-[800px] \">\n//                     {/* Main Image/Video */}\n//                     <div className=\"w-[400px] h-[650px] border border-gray-800 overflow-hidden\">\n//                         <video\n//                             ref={(el) => { videoRefs.current[currentPost.id] = el; }}\n//                             data-post-id={currentPost.id}\n//                             src={currentPost.videoUrl}\n//                             className=\"w-[400px] h-[650px] object-cover bg-black\"\n//                             muted\n//                             loop\n//                             playsInline\n//                         />\n//                     </div>\n//                     {/* User Profile and Comments */}\n//                     <div className=\"w-[400px] p-4\">\n//                         {/* User Profile */}\n//                         <div className=\"flex items-center justify-between mb-4\">\n//                             <div className=\"flex items-center gap-2\">\n//                                 <div className=\"w-8 h-8 rounded-full p-[2px] bg-gradient-to-tr from-pink-500 via-yellow-400 to-red-500\">\n//                                     <img\n//                                         src={currentPost.profilePic}\n//                                         alt={currentPost.username}\n//                                         className=\"w-full h-full rounded-full object-cover border border-black\"\n//                                     />\n//                                 </div>\n//                                 <div className=\"username font-semibold text-white\">\n//                                     {currentPost.username}\n//                                 </div>\n//                             </div>\n//                             {/* Right section - menu icon */}\n//                             <div className=\"text-gray-400 cursor-pointer text-xl leading-none\">\n//                                 •••\n//                             </div>\n//                         </div>\n//                         {/* Comments Section */}\n//                         <div className=\"mt-4 border-t border-gray-200 pt-2\">\n//                             <h3 className=\"text-sm font-semibold mb-2\">Comments</h3>\n//                             <div className=\"space-y-3 overflow-y-auto h-[400px] scrollbar-thin scrollbar-thumb-gray-300 pr-2\">\n//                                 {currentPost.comments.map((comment, index) => (\n//                                     <div key={index} className=\"flex items-start gap-2\">\n//                                         {/* User Profile */}\n//                                         <img\n//                                             src={currentPost.profilePic}\n//                                             alt=\"profile\"\n//                                             className=\"w-8 h-8 rounded-full object-cover\"\n//                                         />\n//                                         {/* Comment Content */}\n//                                         <div className=\"flex flex-col\">\n//                                             <div className=\"text-sm\">\n//                                                 <span className=\"font-semibold text-gray-900 mr-2\">\n//                                                     {comment.user}\n//                                                 </span>\n//                                                 <span>{comment.text}</span>\n//                                             </div>\n//                                             {/* Comment Time */}\n//                                             <div className=\"text-xs text-gray-400 mt-1\">2d</div>\n//                                         </div>\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                             {/* Like, Comment, Save Buttons */}\n//                             <div className=\"flex items-center justify-between py-3 mt-4 border-t border-gray-200\">\n//                                 <div className=\"flex gap-4\">\n//                                     <button className=\"transition-transform hover:scale-110\">\n//                                         <Heart size={24} className=\"text-white\" fill=\"none\" />\n//                                     </button>\n//                                     <button className=\"transition-transform hover:scale-110\">\n//                                         <MessageCircle size={24} className=\"text-white\" />\n//                                     </button>\n//                                 </div>\n//                                 <button className=\"transition-transform hover:scale-110\">\n//                                     <Bookmark size={24} className=\"text-white\" fill=\"none\" />\n//                                 </button>\n//                             </div>\n//                             {/* Add Comment Input */}\n//                             <div className=\"flex items-center gap-2  pt-2 mt-4\">\n//                                 <img\n//                                     src={currentPost.profilePic}\n//                                     alt=\"profile\"\n//                                     className=\"w-7 h-7 rounded-full object-cover\"\n//                                 />\n//                                 <input\n//                                     type=\"text\"\n//                                     placeholder=\"Add a comment...\"\n//                                     className=\"flex-1 text-sm outline-none border-none bg-transparent\"\n//                                 />\n//                                 <button className=\"text-blue-500 text-sm font-semibold hover:text-blue-700\">\n//                                     Post\n//                                 </button>\n//                                 <div className=\"\">😃</div>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     )\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/reels/[id]/page.tsx\n"));

/***/ })

});